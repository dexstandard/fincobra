name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: promptswap_test
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Install dependencies
        run: |
          npm --prefix backend ci &
          npm --prefix frontend ci &
          wait

      - name: Lint frontend
        run: npm --prefix frontend run lint

      - name: Test backend
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/promptswap_test
        run: npm --prefix backend test

      - name: Build backend
        run: npm run build

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: main
    steps:
      - uses: actions/checkout@v4

      # Export secrets to env, then validate in bash
      - name: Verify required secrets
        env:
          DO_SSH_HOST: ${{ secrets.DO_SSH_HOST }}
          DO_SSH_USER: ${{ secrets.DO_SSH_USER }}
          DO_SSH_PRIVATE_KEY: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          DO_SSH_PASSPHRASE: ${{ secrets.DO_SSH_PASSPHRASE }}
          DOMAIN: ${{ secrets.DOMAIN }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        run: |
          set -euo pipefail
          for s in DO_SSH_HOST DO_SSH_USER DO_SSH_PRIVATE_KEY DO_SSH_PASSPHRASE DOMAIN KEY_PASSWORD GOOGLE_CLIENT_ID; do
            v="${!s}"
            if [ -z "$v" ]; then
              echo "Missing secret: $s"
              exit 1
            fi
          done

      - name: Upload files to droplet
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DO_SSH_HOST }}
          username: ${{ secrets.DO_SSH_USER }}
          key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.DO_SSH_PASSPHRASE }}
          source: "backend,frontend,docker-compose.yml,Dockerfile,Caddyfile"
          target: "~/prompt-swap"

      - name: Deploy with Docker Compose
        uses: appleboy/ssh-action@v1.1.0
        env:
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          DOMAIN: ${{ secrets.DOMAIN }}
        with:
          host: ${{ secrets.DO_SSH_HOST }}
          username: ${{ secrets.DO_SSH_USER }}
          key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.DO_SSH_PASSPHRASE }}
          envs: KEY_PASSWORD,GOOGLE_CLIENT_ID,DOMAIN
          script: |
            set -euo pipefail
            cd ~/prompt-swap
            export KEY_PASSWORD="${KEY_PASSWORD}"
            export GOOGLE_CLIENT_ID="${GOOGLE_CLIENT_ID}"
            export DOMAIN="${DOMAIN}"
            export VITE_GOOGLE_CLIENT_ID="${GOOGLE_CLIENT_ID}"
            docker compose up -d --build
            # Wait for backend health endpoint via Caddy
            timeout 60s bash -c 'until curl -fsS -H "Host: ${DOMAIN}" http://localhost/api/health; do sleep 3; done'
            docker compose ps
