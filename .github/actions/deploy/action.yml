name: Deploy
description: Verify secrets and deploy to DigitalOcean droplet
inputs:
  do-ssh-host:
    required: true
  do-ssh-user:
    required: true
  do-ssh-private-key:
    required: true
  do-ssh-passphrase:
    required: true
  domain:
    required: true
  key-password:
    required: true
  google-client-id:
    required: true
  db-connection-str:
    required: true
runs:
  using: composite
  steps:
    - name: Verify required secrets
      env:
        DO_SSH_HOST: ${{ inputs.do-ssh-host }}
        DO_SSH_USER: ${{ inputs.do-ssh-user }}
        DO_SSH_PRIVATE_KEY: ${{ inputs.do-ssh-private-key }}
        DO_SSH_PASSPHRASE: ${{ inputs.do-ssh-passphrase }}
        DOMAIN: ${{ inputs.domain }}
        KEY_PASSWORD: ${{ inputs.key-password }}
        GOOGLE_CLIENT_ID: ${{ inputs.google-client-id }}
        DB_CONNECTION_STR: ${{ inputs.db-connection-str }}
      run: |
        set -euo pipefail
        for s in DO_SSH_HOST DO_SSH_USER DO_SSH_PRIVATE_KEY DO_SSH_PASSPHRASE DOMAIN KEY_PASSWORD GOOGLE_CLIENT_ID DB_CONNECTION_STR; do
          v="${!s}"
          if [ -z "$v" ]; then
            echo "Missing secret: $s"
            exit 1
          fi
        done
      shell: bash

    - name: Upload files to droplet
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ inputs.do-ssh-host }}
        username: ${{ inputs.do-ssh-user }}
        key: ${{ inputs.do-ssh-private-key }}
        passphrase: ${{ inputs.do-ssh-passphrase }}
        source: "backend,frontend,docker-compose.yml,Dockerfile,Caddyfile"
        target: "~/prompt-swap"

    - name: Deploy with Docker Compose
      uses: appleboy/ssh-action@v1.1.0
      env:
        KEY_PASSWORD: ${{ inputs.key-password }}
        GOOGLE_CLIENT_ID: ${{ inputs.google-client-id }}
        DOMAIN: ${{ inputs.domain }}
        DB_CONNECTION_STR: ${{ inputs.db-connection-str }}
      with:
        host: ${{ inputs.do-ssh-host }}
        username: ${{ inputs.do-ssh-user }}
        key: ${{ inputs.do-ssh-private-key }}
        passphrase: ${{ inputs.do-ssh-passphrase }}
        envs: KEY_PASSWORD,GOOGLE_CLIENT_ID,DOMAIN,DB_CONNECTION_STR
        script: |
          set -euo pipefail
          cd ~/prompt-swap
          export KEY_PASSWORD="${KEY_PASSWORD}"
          export GOOGLE_CLIENT_ID="${GOOGLE_CLIENT_ID}"
          export DOMAIN="${DOMAIN}"
          export VITE_GOOGLE_CLIENT_ID="${GOOGLE_CLIENT_ID}"
          export DB_CONNECTION_STR="${DB_CONNECTION_STR}"
          docker compose up -d --build
          # Wait for backend health endpoint via Caddy
          timeout 60s bash -c 'until curl -fsS -H "Host: ${DOMAIN}" http://localhost/api/health; do sleep 3; done'
          docker compose ps
